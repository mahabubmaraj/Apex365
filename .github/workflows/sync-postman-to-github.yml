name: Sync Postman Collection to GitHub

on:
  schedule:
    - cron: '0 * * * *'  # Hourly sync
  workflow_dispatch:     # Manual trigger

jobs:
  sync:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Explicitly grant write permission
    
    steps:
      # --- Step 1: Checkout with write access ---
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Required for proper git history
          token: ${{ secrets.GITHUB_TOKEN }}  # Explicit token usage

      # --- Step 2: Fetch Postman Collection ---
      - name: Fetch Postman Collection
        id: fetch
        run: |
          echo "::group::Fetching Collection"
          mkdir -p postman-collections
          
          HTTP_STATUS=$(curl -s -o "postman-collections/collection.json" -w "%{http_code}" \
            -H "X-API-Key: ${{ secrets.POSTMAN_API_KEY }}" \
            "https://api.getpostman.com/collections/${{ secrets.COLLECTION_ID }}")
          
          if [[ $HTTP_STATUS -ne 200 ]]; then
            echo "::error::Postman API failed (HTTP $HTTP_STATUS)"
            cat "postman-collections/collection.json"
            exit 1
          fi
          echo "::endgroup::"

      # --- Step 3: Commit and Push Changes ---
      - name: Commit and Push Changes
        if: steps.fetch.outcome == 'success'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Alternative token reference
        run: |
          echo "::group::Git Operations"
          # Configure git
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          
          # Check for changes
          git add postman-collections/collection.json
          
          if ! git diff-index --quiet HEAD --; then
            echo "Changes detected - committing"
            git commit -m "Auto-update Postman Collection [$(date +'%Y-%m-%d %H:%M')]"
            
            # Use token-based authentication
            git remote set-url origin https://x-access-token:$GH_TOKEN@github.com/$GITHUB_REPOSITORY.git
            git pull --rebase
            git push origin HEAD:$GITHUB_REF_NAME
            echo "Changes pushed successfully"
          else
            echo "No changes detected"
          fi
          echo "::endgroup::"
