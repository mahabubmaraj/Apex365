name: Sync Postman Collection to GitHub

on:
  schedule:
    - cron: '0 * * * *'  # Runs hourly
  workflow_dispatch:     # Manual trigger option

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
      # --- Step 1: Checkout with write permissions ---
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Required for git diff to work properly
          persist-credentials: true  # Essential for push access

      # --- Step 2: Verify secrets exist (debug) ---
      - name: Debug - Verify Secrets
        run: |
          echo "::group::Secrets Debug Info"
          echo "COLLECTION_ID length: ${#SECRET_COLLECTION_ID}"
          echo "POSTMAN_API_KEY length: ${#SECRET_POSTMAN_API_KEY}"
          echo "::endgroup::"
        env:
          SECRET_COLLECTION_ID: ${{ secrets.COLLECTION_ID }}
          SECRET_POSTMAN_API_KEY: ${{ secrets.POSTMAN_API_KEY }}

      # --- Step 3: Fetch Postman Collection ---
      - name: Fetch Postman Collection
        id: fetch
        run: |
          echo "::group::Fetching Collection"
          mkdir -p postman-collections
          
          HTTP_STATUS=$(curl -s -o "postman-collections/collection.json" -w "%{http_code}" \
            -H "X-API-Key: ${{ secrets.POSTMAN_API_KEY }}" \
            "https://api.getpostman.com/collections/${{ secrets.COLLECTION_ID }}")
          
          echo "HTTP Status: $HTTP_STATUS"
          
          if [[ $HTTP_STATUS -ne 200 ]]; then
            echo "::error::Postman API request failed (HTTP $HTTP_STATUS)"
            echo "Response body:"
            cat "postman-collections/collection.json"
            exit 1
          fi
          
          echo "Collection successfully downloaded"
          echo "::endgroup::"

      # --- Step 4: Commit and Push Changes ---
      - name: Commit and Push Changes
        if: steps.fetch.outcome == 'success'
        run: |
          echo "::group::Git Operations"
          # Configure git
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          
          # Check for changes
          git add postman-collections/collection.json
          
          if ! git diff-index --quiet HEAD --; then
            echo "Changes detected - committing"
            git commit -m "Auto-update Postman Collection [$(date +'%Y-%m-%d %H:%M')]"
            git pull --rebase  # Prevent race conditions
            git push
            echo "Changes pushed successfully"
          else
            echo "No changes detected"
          fi
          echo "::endgroup::"
